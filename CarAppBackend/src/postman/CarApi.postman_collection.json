{
	"info": {
		"_postman_id": "8a2c0dec-53cb-45da-ad58-9f953f597b5f",
		"name": "Car Api",
		"description": "API for Car APP\n\nContact Support: \n{\n\nName : Guillermo Miralles Campillo\n\nEmail : guillermo.miralles.campillo@everis.com\n\n}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set OK, but first errors",
			"item": [
				{
					"name": "api",
					"item": [
						{
							"name": "brands",
							"item": [
								{
									"name": "Create ValidationError",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44dc8e53-44d9-4d5a-9e0b-9253f8250583",
												"exec": [
													"tests['ResponseCode is Bad Request'] = responseCode.code == 400;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Errors are shown'] = responseJSON[0] && responseJSON[0].errorNumber;",
													"tests['No ID available'] = responseJSON.id === undefined;",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands"
											]
										},
										"description": "Create a new car with specified data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create ValidationFixed",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44dc8e53-44d9-4d5a-9e0b-9253f8250583",
												"exec": [
													"tests['ResponseCode is Created'] = responseCode.code == 201;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['There\\'s no errors'] = !responseJSON[0] || !responseJSON[0].errorNumber;",
													"",
													"tests['ID is available'] = responseJSON.id !== undefined;",
													"",
													"if(tests['ID is available']) {",
													"    postman.setEnvironmentVariable('brandID', responseJSON.id);",
													"} "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"BMW\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands"
											]
										},
										"description": "Create a new car with specified data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get brand by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code == 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "999999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get brand by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Brand is a full object'] = responseJSON.id && responseJSON.name;",
													"tests['There\\'s no extra fields'] = !responseJSON.createdAt && !responseJSON.lastUpdated;",
													"",
													"if(tests['Response Code is OK'] && tests['Brand is a full object'] && tests['There\\'s no extra fields']) {",
													"    postman.setEnvironmentVariable('originalResponseBrand', responseBody);",
													"} "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{brandID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all brands OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3084af0-2f10-4c9f-8958-e5807175a0cb",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update brand by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code == 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Mercedes\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "999999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update brand by ID ValidationError",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"tests['ResponseCode is Bad Request'] = responseCode.code == 400;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Errors are shown'] = responseJSON[0] && responseJSON[0].errorNumber;",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{brandID}}"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update brand by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"var originalResponse = postman.getEnvironmentVariable('originalResponseBrand');",
													"var data;",
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"if(tests['Response Code is OK']) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"    data = {",
													"        name: {",
													"            oldOne: originalResponse.name,",
													"            newOne: responseJSON.name",
													"        }",
													"    };",
													"} ",
													"tests['Brand is correctly and fully updated'] = data && data.name.oldOne != data.name.newOne;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Mercedes\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{brandID}}"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete brand by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c763e3a0-1c81-448c-8eb1-47328e348c62",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code = 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "999999"
												}
											]
										},
										"description": "Delete the car with the specified ID"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "countries",
							"item": [
								{
									"name": "Create ValidationError",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44dc8e53-44d9-4d5a-9e0b-9253f8250583",
												"exec": [
													"tests['ResponseCode is Bad Request'] = responseCode.code == 400;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Errors are shown'] = responseJSON[0] && responseJSON[0].errorNumber;",
													"tests['No ID available'] = responseJSON.id === undefined;",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/countries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries"
											]
										},
										"description": "Create a new car with specified data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create ValidationFixed",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44dc8e53-44d9-4d5a-9e0b-9253f8250583",
												"exec": [
													"tests['ResponseCode is Created'] = responseCode.code == 201;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['There\\'s no errors'] = !responseJSON[0] || !responseJSON[0].errorNumber;",
													"",
													"tests['ID is available'] = responseJSON.id !== undefined;",
													"",
													"if(tests['ID is available']) {",
													"    postman.setEnvironmentVariable('countryID', responseJSON.id);",
													"} "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Spain\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/countries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries"
											]
										},
										"description": "Create a new car with specified data"
									},
									"response": [
										{
											"name": "Car",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										},
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Get country by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code == 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "999999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get country by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Country is a full object'] = responseJSON.id && responseJSON.name;",
													"tests['There\\'s no extra fields'] = !responseJSON.createdAt && !responseJSON.lastUpdated;",
													"",
													"if(tests['Response Code is OK'] && tests['Country is a full object'] && tests['There\\'s no extra fields']) {",
													"    postman.setEnvironmentVariable('originalResponseCountry', responseBody);",
													"} "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{countryID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all countries OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3084af0-2f10-4c9f-8958-e5807175a0cb",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/countries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update country by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code == 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"England\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "999999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update country by ID ValidationError",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"tests['ResponseCode is Bad Request'] = responseCode.code == 400;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Errors are shown'] = responseJSON[0] && responseJSON[0].errorNumber;",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{countryID}}"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update country by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"var originalResponse = postman.getEnvironmentVariable('originalResponseCountry');",
													"var data;",
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"if(tests['Response Code is OK']) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"    data = {",
													"        name: {",
													"            oldOne: originalResponse.name,",
													"            newOne: responseJSON.name",
													"        }",
													"    };",
													"} ",
													"tests['Country is correctly and fully updated'] = data && data.name.oldOne != data.name.newOne;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"England\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{countryID}}"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete country by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c763e3a0-1c81-448c-8eb1-47328e348c62",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code = 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "999999"
												}
											]
										},
										"description": "Delete the car with the specified ID"
									},
									"response": [
										{
											"name": "Car deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "cars",
							"item": [
								{
									"name": "Create ValidationError",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44dc8e53-44d9-4d5a-9e0b-9253f8250583",
												"exec": [
													"tests['ResponseCode is Bad Request'] = responseCode.code == 400;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Errors are shown'] = responseJSON[0] && responseJSON[0].errorNumber;",
													"tests['No ID available'] = responseJSON.id === undefined;",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/cars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars"
											]
										},
										"description": "Create a new car with specified data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create ValidationFixed",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44dc8e53-44d9-4d5a-9e0b-9253f8250583",
												"exec": [
													"tests['ResponseCode is Created'] = responseCode.code == 201;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['There\\'s no errors'] = !responseJSON[0] || !responseJSON[0].errorNumber;",
													"",
													"tests['ID is available'] = responseJSON.id !== undefined;",
													"",
													"if(tests['ID is available']) {",
													"    postman.setEnvironmentVariable('carUUID', responseJSON.id);",
													"} "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"brand\": {\"id\": \"{{brandID}}\"},\n\t\"country\": {\"id\": \"{{countryID}}\"},\n\t\"registration\": \"1980-01-01T00:00:00\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/cars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars"
											]
										},
										"description": "Create a new car with specified data"
									},
									"response": [
										{
											"name": "Car",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										},
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Get car by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8c98c82-215b-44ac-b2fb-23d831995e6f",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to retrieve",
													"key": "id",
													"value": "123456789123456789123456789dhssgfhsfghsfghsf"
												}
											]
										},
										"description": "Retrieve the car with the specified ID"
									},
									"response": [
										{
											"name": "Car",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"brand\": \"<string>\",\n  \"country\": \"<string>\",\n  \"registration\": \"<dateTime>\",\n  \"id\": \"<string>\"\n },\n {\n  \"brand\": \"<string>\",\n  \"country\": \"<string>\",\n  \"registration\": \"<dateTime>\",\n  \"id\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get car by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8c98c82-215b-44ac-b2fb-23d831995e6f",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Car is a full object'] = responseJSON.id && responseJSON.brand && ",
													"                                responseJSON.country && responseJSON.registration;",
													"tests['There\\'s no extra fields'] = !responseJSON.createdAt && !responseJSON.lastUpdated;",
													"",
													"if(tests['Response Code is OK'] && tests['Car is a full object'] && tests['There\\'s no extra fields']) {",
													"    postman.setEnvironmentVariable('originalResponseCar', responseBody);",
													"} "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to retrieve",
													"key": "id",
													"value": "{{carUUID}}"
												}
											]
										},
										"description": "Retrieve the car with the specified ID"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"brand\": \"<string>\",\n  \"country\": \"<string>\",\n  \"registration\": \"<dateTime>\",\n  \"id\": \"<string>\"\n },\n {\n  \"brand\": \"<string>\",\n  \"country\": \"<string>\",\n  \"registration\": \"<dateTime>\",\n  \"id\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Get all cars OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8c98c82-215b-44ac-b2fb-23d831995e6f",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												""
											]
										},
										"description": "Retrieve the car with the specified ID"
									},
									"response": [
										{
											"name": "Car",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"brand\": \"<string>\",\n  \"country\": \"<string>\",\n  \"registration\": \"<dateTime>\",\n  \"id\": \"<string>\"\n },\n {\n  \"brand\": \"<string>\",\n  \"country\": \"<string>\",\n  \"registration\": \"<dateTime>\",\n  \"id\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update car by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code = 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"brand\": \"Mercedes\",\n    \"country\": \"Spain\",\n    \"registration\": \"2019-01-01T00:00:00.000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "999999"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										},
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Update car by ID ValidationError",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"tests['ResponseCode is Bad Request'] = responseCode.code == 400;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Errors are shown'] = responseJSON[0] && responseJSON[0].errorNumber;",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "{{carUUID}}"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										},
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "Update car by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0288e1-ffbb-488c-bef0-d22e6e4b6b89",
												"exec": [
													"var originalResponse = postman.getEnvironmentVariable('originalResponseCar');",
													"var data;",
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"if(tests['Response Code is OK']) {",
													"    var responseJSON = JSON.parse(responseBody);",
													"    data = {",
													"        registration: {",
													"            oldOne: originalResponse.registration,",
													"            newOne: responseJSON.registration",
													"        }",
													"    };",
													"} ",
													"tests['Car is correctly and fully updated'] = data.registration && data.registration.oldOne != data.registration.newOne;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"brand\": {\"id\": \"{{brandID}}\"},\r\n    \"country\": {\"id\": \"{{countryID}}\"},\r\n    \"registration\": \"2019-02-03T00:00:00.000\"\r\n}\r\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "78d88789-eccb-4b37-88af-fb060017edce"
												}
											]
										},
										"description": "Update the car with the specified ID and new data"
									},
									"response": [
										{
											"name": "Validation errors",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n },\n {\n  \"errorNumber\": \"<integer>\",\n  \"description\": \"<string>\"\n }\n]"
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"brand\": \"<string>\",\n    \"country\": \"<string>\",\n    \"registration\": \"<dateTime>\",\n    \"id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"brand\": \"<string>\",\n \"country\": \"<string>\",\n \"registration\": \"<dateTime>\",\n \"id\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete car by ID NOT FOUND",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c763e3a0-1c81-448c-8eb1-47328e348c62",
												"exec": [
													"tests['Response Code is NOT FOUND'] = responseCode.code = 404;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "43676456732546274678"
												}
											]
										},
										"description": "Delete the car with the specified ID"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "PostUsing",
							"item": [
								{
									"name": "Get brand cars by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Array is not empty'] = responseJSON.length > 0;",
													"if(tests['Array is not empty']) {",
													"    tests['Objects are cars'] = responseJSON[0].id && responseJSON[0].registration && responseJSON[0].country && responseJSON[0].brand;",
													"    tests['There\\'s no extra fields'] = !responseJSON[0].createdAt && !responseJSON[0].lastUpdated;",
													"}",
													"",
													"tests['All tests passed'] = tests['Response Code is OK'] && tests['Array is not empty'] && tests['Objects are cars'] && tests['There\\'s no extra fields'];"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id/cars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id",
												"cars"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{brandID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get country cars by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Array is not empty'] = responseJSON.length > 0;",
													"if(tests['Array is not empty']) {",
													"    tests['Objects are cars'] = responseJSON[0].id && responseJSON[0].registration && responseJSON[0].country && responseJSON[0].brand;",
													"    tests['There\\'s no extra fields'] = !responseJSON[0].createdAt && !responseJSON[0].lastUpdated;",
													"}",
													"",
													"tests['All tests passed'] = tests['Response Code is OK'] && tests['Array is not empty'] && tests['Objects are cars'] && tests['There\\'s no extra fields'];"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id/cars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id",
												"cars"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{countryID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get car's country by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Response entity is Country'] = responseJSON.id && responseJSON.name"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id/country",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id",
												"country"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{carUUID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get car's brand by ID OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a475800f-0f34-4e3b-9a92-6267fe8db2d5",
												"exec": [
													"tests['Response Code is OK'] = responseCode.code == 200;",
													"var responseJSON = JSON.parse(responseBody);",
													"tests['Response entity is Brand'] = responseJSON.id && responseJSON.name"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id/brand",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id",
												"brand"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{carUUID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete car by ID NO CONTENT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c763e3a0-1c81-448c-8eb1-47328e348c62",
												"exec": [
													"tests['Response Code is NO CONTENT'] = responseCode.code = 204;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cars",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "{{carUUID}}"
												}
											]
										},
										"description": "Delete the car with the specified ID"
									},
									"response": [
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete brand by ID NO CONTENT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c763e3a0-1c81-448c-8eb1-47328e348c62",
												"exec": [
													"tests['Response Code is NO CONTENT'] = responseCode.code = 204;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/brands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"brands",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "{{brandID}}"
												}
											]
										},
										"description": "Delete the car with the specified ID"
									},
									"response": [
										{
											"name": "Car deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete country by ID NO CONTENT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c763e3a0-1c81-448c-8eb1-47328e348c62",
												"exec": [
													"tests['Response Code is NO CONTENT'] = responseCode.code = 204;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/countries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries",
												":id"
											],
											"variable": [
												{
													"description": "UUID of the car to update",
													"key": "id",
													"value": "{{countryID}}"
												}
											]
										},
										"description": "Delete the car with the specified ID"
									},
									"response": [
										{
											"name": "Car deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Car not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/cars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "42e8cdc1-3f3a-4149-8b28-f5b0713e47d3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8a579f30-86f2-4e82-b879-091a0fa76964",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a22d1b47-1dea-4eed-8448-3ec63dd96f06",
			"key": "baseUrl",
			"value": "http://everis-carapp.herokuapp.com/car-api",
			"type": "string"
		}
	]
}